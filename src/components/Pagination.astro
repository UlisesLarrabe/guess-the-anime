---
const { challengeId, length } = Astro.props;
const hasPrev = challengeId - 1 > 0;
const opacityPrev = hasPrev ? "opacity-100" : "opacity-50";

const hasNext = challengeId + 1 < length + 1;
const opacityNext = hasNext ? "opacity-100" : "opacity-50";
---

<div class="flex gap-4 justify-center items-center mt-10" data-id={challengeId}>
  <button
    class={`bg-[#d46419] p-4 rounded-sm hover:scale-105 transition-transform font-semibold text-[#f7f7f7] ${opacityPrev}`}
    data-op="prev"
    disabled={!hasPrev}
  >
    ⬅️ Reto anterior
  </button>

  <a
    class="bg-[#d46419] p-4 rounded-sm hover:scale-105 transition-transform font-semibold text-[#f7f7f7]"
    href="/"
    >...
  </a>

  <button
    class={`bg-[#d46419] p-4 rounded-sm hover:scale-105 transition-transform font-semibold text-[#f7f7f7] ${opacityNext}`}
    data-op="next"
    disabled={!hasNext}
  >
    Siguiente reto ➡️
  </button>
</div>

<script>
  const challengeId = parseInt(document.querySelector("[data-id]").dataset.id);

  const redirect = (url: string) => {
    return (window.location.href = url);
  };

  const $buttons = document.querySelectorAll("button");
  $buttons.forEach((button) => {
    button.addEventListener("click", (e) => {
      const { op } = e.target.dataset;
      if (op === "prev") {
        redirect(`/es/challenges/${challengeId - 1}`);
      } else {
        redirect(`/es/challenges/${challengeId + 1}`);
      }
    });
  });
</script>
